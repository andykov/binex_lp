// Функция для расчета ширины в %
// @function calculate-width ($col-span) {
//     @return 100% / $col-span
// }
// .span-two {
//     width: calculate-width(2); // spans 2 columns, width = 50%
// }


// Миксин для опредения типа спрайта, через обычный селектор или через псевдоэлемент
// @mixin icon($type, $spr) {
//   @if $type == true {
//   // 	position: relative;
//     &:before {
//       content: '';
//       display: inline-block;
//       vertical-align: middle;
//       background-image: url($sprite_path);
//       @include sprite($spr);
//       // position: absolute;
//       // top: 50%;
//       // left: 50%;
//       // margin-left: - nth($spr,5) / 2;
//       // margin-top: - nth($spr,6) / 2;
//     }

//   } @else if $type == false {
//   	background-image: url($sprite_path);
//     @include sprite($spr);
//   }
// }


// border-arrow(borderWidth = 2px) {
// 	border: borderWidth solid #F00;
// 	color: #F00;
// }

@mixin clearfix() {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

// $border-radius: 3px !default;

@mixin radius($border_radius) {
	// @if $border-radius > 3 {
		border-radius: $border_radius;
	// } @else {
	// 	border-radius: 3px;
	// }
}


//=== Миксин для placeholder ===//
// Пример вызова:
// input {
// 	+placeholder() {
// 		color #fff
// 	}
// }
// placeholder() {
// 	&::-webkit-input-placeholder
// 		{block}
// 	&:-moz-placeholder
// 		{block}
// 	&::-moz-placeholder
// 		{block}
// 	&:-ms-input-placeholder
// 		{block}
// }


//=== Генерация спрайтов ===//
/*
Вызов: @include sprite($var) - вместо $var, вставлять переменные из сгенерированного файла sprite.styl
*/
@mixin spriteWidth($sprite) {
	width: nth($sprite,5);
}
@mixin spriteHeight($sprite) {
	height: nth($sprite,6);
}
@mixin spritePosition($sprite) {
	background-position: nth($sprite,3) nth($sprite,4);
}
// @mixin spriteImage($sprite) {
// 	background-image: url(nth($sprite,9));
// }
@mixin sprite($sprite) {
	// @if !match('hover', selector()) && !match('active', selector()){
	// 	@include spriteImage($sprite)
	// }
	// @include spriteImage($sprite);
	@include spritePosition($sprite);
	@include spriteWidth($sprite);
	@include spriteHeight($sprite);
}


// mixin buttons
@mixin mo-btn-transparent() {
	color: $mo-btn_transparent_color;
	background-color: $mo-btn_transparent_background_color;
	border: 1px solid $mo-btn_transparent_border_color;
}

@mixin mo-btn-secondary() {
	color: $mo-btn_secondary_color;
	background-color: $mo-btn_secondary_background_color;
	border: 1px solid $mo-btn_secondary_border_color;
}

@mixin mo-btn-default() {
	color: $mo-btn_default_color;
	background-color: $mo-btn_default_background_color;
	border: 1px solid transparent;
}

@mixin mo-btn-special() {
	color: $mo-btn_special_color;
	background-color: $mo-btn_special_background_color;
	border: 0;
}

@mixin mo-btn-success() {
	color: $mo-btn_success_color;
	background-color: $mo-btn_success_background_color;
	border: 0;
}

@mixin mo-btn-info() {
	color: $mo-btn_info_color;
	background-color: $mo-btn_info_background_color;
	border: 1px solid transparent;
}

@mixin mo-btn-orange() {
	color: $mo-btn_orange_color;
	background-color: $mo-btn_orange_background_color;
}

@mixin mo-btn-gray() {
	color: $mo-btn_gray_color;
	background-color: $mo-btn_gray_background_color;
	border: 1px solid transparent;
}

@mixin text-uppercase($value) {
	@if $value == true {
		text-transform: uppercase;
	}
	@else if $value == false {
		text-transform: none;
	}
}

